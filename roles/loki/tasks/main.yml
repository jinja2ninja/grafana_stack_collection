- name: install unzip package
  ansible.builtin.apt:
    name: unzip
    state: present

- name: create loki directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - {'path': '/opt/loki', 'mode': '0755'}
    - {'path': '/etc/loki', 'mode': '0644'}

- name: template loki config files
  ansible.builtin.template:
    src: "{{ loki_config_template }}"
    dest: /etc/loki/loki.yml
    owner: root
    group: root
    mode: 0644

- name: Loki version block
  block:
    - name: check if binary exists
      ansible.builtin.stat:
        path: /opt/loki/loki
      register: binary

    - name: check loki version
      ansible.builtin.command: sudo /opt/loki/loki -version
      register: loki_version_check
      when: binary.stat.exists
      changed_when: false

    - name: Show loki version
      ansible.builtin.debug:
        msg: "{{  loki_version_check | regex_search('\\d.\\d+.\\d+')  }} is installed, and {{  loki_version  }} is the newest"
  rescue:
    - name: show rescue message
      ansible.builtin.debug: 
        msg: "The loki version check seems to have failed. Setting the version to match the one defined by 'loki_version' variable."
    - name: "Set variable for loki version"
      ansible.builtin.set_fact:
        loki_version_check: "{{ loki_version }}"     

- name: install loki if its not present
  ansible.builtin.unarchive:
    src: "https://github.com/grafana/loki/releases/download/v\
         {{  loki_version  }}/loki-linux-amd64.zip"
    dest: /opt/loki/
    remote_src: true
  tags:
    - loki
  when: (not binary.stat.exists)
  notify: 
    - move loki binary

- name: reinstall loki if different version is defined in variable
  ansible.builtin.unarchive:
    src: "https://github.com/grafana/loki/releases/download/v\
         {{  loki_version  }}/loki-linux-amd64.zip"
    dest: /opt/loki/
    remote_src: true
  tags:
    - loki
  when: (loki_version_check | regex_search('\d.\d+.\d+') != loki_version)
  notify: 
    - restart loki
    - move loki binary

- name: template systemd unit file
  ansible.builtin.template:
    src: "{{ loki_service_template }}"
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: 0755
  tags:
    - loki
  notify: reload systemd daemon

- name: enable and start loki service
  ansible.builtin.systemd:
    name: loki
    enabled: true
    state: started
  tags:
    - loki
