---
- name: create /opt/prometheus directory
  ansible.builtin.file:
    path: /opt/prometheus
    state: directory
    owner: root
    group: root
    mode: 0750
  changed_when: false

- name: check if binary exists
  ansible.builtin.stat:
    path: /opt/prometheus/prometheus
  register: binary

- name: check prometheus version
  ansible.builtin.command: /opt/prometheus/prometheus --version
  register: prometheus_version_check
  when: binary.stat.exists
  changed_when: false

- name: install prometheus if its not present
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v\
         {{  prometheus_version  }}/prometheus-{{  prometheus_version  }}.linux-amd64.tar.gz"
    dest: /opt/prometheus
    remote_src: true
  tags:
    - loki
  when: not binary.stat.exists

- name: update prometheus if different version is defined in variable
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v\
         {{  prometheus_version  }}/prometheus-{{  prometheus_version  }}.linux-amd64.tar.gz"
    dest: /opt/prometheus/
    remote_src: true
  tags:
    - loki
  when: (prometheus_version_check | regex_search('\d.\d+.\d+') != prometheus_version)
  notify: restart prometheus

- name: check if install artifacts exist
  ansible.builtin.stat:
    path: "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64/"
  register: artifacts

- name: stop prometheus service temporarily
  ansible.builtin.systemd:
    name: prometheus
    state: stopped
  when: (artifacts.stat.exists) and binary.stat.exists

- name: Move prometheus and promtool binaries
  ansible.builtin.copy:
    src: "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64/"
    dest: /opt/prometheus
    owner: root
    group: root
    mode: '0750'
    remote_src: true
  when: artifacts.stat.exists

- name: remove artifacts from prometheus install
  ansible.builtin.file:
    path: "{{  item  }}"
    state: absent
  with_items:
    - "/opt/prometheus/prometheus-{{  prometheus_version  }}.linux-amd64"
    - "/opt/prometheus/prometheus.yml"
  when: artifacts.stat.exists

- name: start prometheus service temporarily
  ansible.builtin.systemd:
    name: prometheus
    state: started
  when: (artifacts.stat.exists) and binary.stat.exists

- name: template systemd unit file
  ansible.builtin.template:
    src: "{{ prometheus_service_template }}"
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0750
  tags:
    - prometheus
  changed_when: false

- name: make directory for prometheus config
  ansible.builtin.file:
    path: "{{  item  }}"
    state: directory
    owner: root
    group: root
    mode: 0640
  with_items:
    - /etc/prometheus
    - /etc/prometheus/rules.d
    - /etc/prometheus/files.d

- name: template prometheus config file
  ansible.builtin.template:
    src: "{{ prometheus_config_template }}"
    dest: /etc/prometheus/prometheus.yml
    owner: root
    group: root
    mode: 0640
  tags:
    - template

- name: reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  tags:
    - prometheus

- name: enable and start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
    state: started
  tags:
    - prometheus
